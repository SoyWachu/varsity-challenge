{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wachu\\\\Desktop\\\\hypeChallenge\\\\react-challenge\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { fetchCity } from \"./redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => fetchCity(e.target.value),\n      children: \"Make API CALL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NjhooW53FpaNk4X2HDZYlDFe0P4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchCity","App","city","setCity","e","target","value"],"sources":["C:/Users/wachu/Desktop/hypeChallenge/react-challenge/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { fetchCity } from \"./redux/actions/actions\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <input onChange={(e) => fetchCity(e.target.value)}>Make API CALL</input>\n      {/* <input\n        placeholder=\"AAAAAAAA\"\n        className=\"bg-red-500 h-56 w-56\"\n        type=\"submit\"\n        value=\"Submit\"\n      /> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,QAA0B,yBAA1B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAO,QAAQ,EAAGK,CAAD,IAAOJ,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAbQL,G;;KAAAA,G;AAeT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}