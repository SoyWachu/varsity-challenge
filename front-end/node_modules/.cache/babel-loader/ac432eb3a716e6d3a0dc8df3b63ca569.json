{"ast":null,"code":"import axios from \"axios\";\nimport { url, apiKey } from \"../../utils/utils\";\nimport { ACTION_TYPES } from \"../actionTypes/actionTypes\";\n\nconst fetchCityRequest = () => {\n  return {\n    type: ACTION_TYPES.FETCH_CITY_REQUEST\n  };\n};\n\nconst fetchCitySuccess = city => {\n  return {\n    type: ACTION_TYPES.FETCH_CITY_SUCCESS,\n    payload: city\n  };\n};\n\nconst fetchCityFailure = error => {\n  return {\n    type: ACTION_TYPES.FETCH_CITY_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchCitiesSuccess = cities => {\n  return {\n    type: ACTION_TYPES.FETCH_CITIES_SUCCESS,\n    payload: cities\n  };\n};\n\nconst deleteOneCity = id => {\n  return {\n    type: ACTION_TYPES.DELETE_ONE_CITY,\n    payload: id\n  };\n};\n\nconst saveOneCity = data => {\n  return {\n    type: ACTION_TYPES.SAVE_ONE_CITY,\n    payload: data\n  };\n};\n\nexport const fetchCity = str => {\n  return dispatch => {\n    dispatch(fetchCityRequest());\n    axios.get(`${url}${str}${apiKey}`).then(response => {\n      const city = response.data;\n      dispatch(fetchCitySuccess(city));\n    }).catch(error => {\n      dispatch(fetchCityFailure(error.message));\n    });\n  };\n};\nexport const fetchCities = () => {\n  return dispatch => {\n    dispatch(fetchCityRequest());\n    axios.get(\"http://localhost:5000/getSavedCities\").then(response => {\n      console.log(response);\n      const cities = response.data;\n      dispatch(fetchCitiesSuccess(cities));\n    }).catch(error => {\n      dispatch(fetchCityFailure(error.message));\n    });\n  };\n};\nexport const deleteCity = id => {\n  return dispatch => {\n    dispatch(deleteOneCity(id));\n    axios.post(`http://localhost:5000/deleteOneCity/${id}`);\n  };\n};\nexport const saveCity = payload => {\n  return dispatch => {\n    var _obj$, _obj$2;\n\n    const obj = Object.values(payload);\n    const cityData = {\n      city_name: typeof obj[11] === \"string\" ? obj[11] : obj[12],\n      temp: (_obj$ = obj[3]) === null || _obj$ === void 0 ? void 0 : _obj$.temp,\n      humidity: (_obj$2 = obj[3]) === null || _obj$2 === void 0 ? void 0 : _obj$2.humidity,\n      city_id: typeof obj[11] === \"number\" ? obj[11] : obj[10]\n    };\n    dispatch(saveOneCity(payload));\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/saveCity\",\n      data: payload\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"names":["axios","url","apiKey","ACTION_TYPES","fetchCityRequest","type","FETCH_CITY_REQUEST","fetchCitySuccess","city","FETCH_CITY_SUCCESS","payload","fetchCityFailure","error","FETCH_CITY_FAILURE","fetchCitiesSuccess","cities","FETCH_CITIES_SUCCESS","deleteOneCity","id","DELETE_ONE_CITY","saveOneCity","data","SAVE_ONE_CITY","fetchCity","str","dispatch","get","then","response","catch","message","fetchCities","console","log","deleteCity","post","saveCity","obj","Object","values","cityData","city_name","temp","humidity","city_id","method"],"sources":["C:/Users/wachu/Desktop/hypeChallenge/client/src/redux/actions/actions.ts"],"sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from \"axios\";\nimport { url, apiKey } from \"../../utils/utils\";\n\nimport { ACTION_TYPES } from \"../actionTypes/actionTypes\";\n\nconst fetchCityRequest = () => {\n  return {\n    type: ACTION_TYPES.FETCH_CITY_REQUEST,\n  };\n};\n\nconst fetchCitySuccess = (city: any[]) => {\n  return {\n    type: ACTION_TYPES.FETCH_CITY_SUCCESS,\n    payload: city,\n  };\n};\n\nconst fetchCityFailure = (error: string) => {\n  return {\n    type: ACTION_TYPES.FETCH_CITY_FAILURE,\n    payload: error,\n  };\n};\n\nconst fetchCitiesSuccess = (cities: any[]) => {\n  return {\n    type: ACTION_TYPES.FETCH_CITIES_SUCCESS,\n    payload: cities,\n  };\n};\n\nconst deleteOneCity = (id: string) => {\n  return {\n    type: ACTION_TYPES.DELETE_ONE_CITY,\n    payload: id,\n  };\n};\n\nconst saveOneCity = (data: {}) => {\n  return {\n    type: ACTION_TYPES.SAVE_ONE_CITY,\n    payload: data,\n  };\n};\n\nexport const fetchCity = (str: string) => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchCityRequest());\n    axios\n      .get(`${url}${str}${apiKey}`)\n      .then((response) => {\n        const city = response.data;\n        dispatch(fetchCitySuccess(city));\n      })\n      .catch((error) => {\n        dispatch(fetchCityFailure(error.message));\n      });\n  };\n};\n\nexport const fetchCities = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchCityRequest());\n    axios\n      .get(\"http://localhost:5000/getSavedCities\")\n      .then((response) => {\n        console.log(response);\n        const cities = response.data;\n        dispatch(fetchCitiesSuccess(cities));\n      })\n      .catch((error) => {\n        dispatch(fetchCityFailure(error.message));\n      });\n  };\n};\n\nexport const deleteCity = (id: string) => {\n  return (dispatch: Dispatch) => {\n    dispatch(deleteOneCity(id));\n    axios.post(`http://localhost:5000/deleteOneCity/${id}`);\n  };\n};\n\nexport const saveCity = (payload: {}) => {\n  return (dispatch: Dispatch) => {\n    const obj = Object.values(payload);\n\n    const cityData = {\n      city_name: typeof obj[11] === \"string\" ? obj[11] : obj[12],\n      temp: obj[3]?.temp,\n      humidity: obj[3]?.humidity,\n      city_id: typeof obj[11] === \"number\" ? obj[11] : obj[10],\n    };\n\n    dispatch(saveOneCity(payload));\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/saveCity\",\n      data: payload,\n    }).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n};\n"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAC7B,OAAO;IACLC,IAAI,EAAEF,YAAY,CAACG;EADd,CAAP;AAGD,CAJD;;AAMA,MAAMC,gBAAgB,GAAIC,IAAD,IAAiB;EACxC,OAAO;IACLH,IAAI,EAAEF,YAAY,CAACM,kBADd;IAELC,OAAO,EAAEF;EAFJ,CAAP;AAID,CALD;;AAOA,MAAMG,gBAAgB,GAAIC,KAAD,IAAmB;EAC1C,OAAO;IACLP,IAAI,EAAEF,YAAY,CAACU,kBADd;IAELH,OAAO,EAAEE;EAFJ,CAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAIC,MAAD,IAAmB;EAC5C,OAAO;IACLV,IAAI,EAAEF,YAAY,CAACa,oBADd;IAELN,OAAO,EAAEK;EAFJ,CAAP;AAID,CALD;;AAOA,MAAME,aAAa,GAAIC,EAAD,IAAgB;EACpC,OAAO;IACLb,IAAI,EAAEF,YAAY,CAACgB,eADd;IAELT,OAAO,EAAEQ;EAFJ,CAAP;AAID,CALD;;AAOA,MAAME,WAAW,GAAIC,IAAD,IAAc;EAChC,OAAO;IACLhB,IAAI,EAAEF,YAAY,CAACmB,aADd;IAELZ,OAAO,EAAEW;EAFJ,CAAP;AAID,CALD;;AAOA,OAAO,MAAME,SAAS,GAAIC,GAAD,IAAiB;EACxC,OAAQC,QAAD,IAAwB;IAC7BA,QAAQ,CAACrB,gBAAgB,EAAjB,CAAR;IACAJ,KAAK,CACF0B,GADH,CACQ,GAAEzB,GAAI,GAAEuB,GAAI,GAAEtB,MAAO,EAD7B,EAEGyB,IAFH,CAESC,QAAD,IAAc;MAClB,MAAMpB,IAAI,GAAGoB,QAAQ,CAACP,IAAtB;MACAI,QAAQ,CAAClB,gBAAgB,CAACC,IAAD,CAAjB,CAAR;IACD,CALH,EAMGqB,KANH,CAMUjB,KAAD,IAAW;MAChBa,QAAQ,CAACd,gBAAgB,CAACC,KAAK,CAACkB,OAAP,CAAjB,CAAR;IACD,CARH;EASD,CAXD;AAYD,CAbM;AAeP,OAAO,MAAMC,WAAW,GAAG,MAAM;EAC/B,OAAQN,QAAD,IAAwB;IAC7BA,QAAQ,CAACrB,gBAAgB,EAAjB,CAAR;IACAJ,KAAK,CACF0B,GADH,CACO,sCADP,EAEGC,IAFH,CAESC,QAAD,IAAc;MAClBI,OAAO,CAACC,GAAR,CAAYL,QAAZ;MACA,MAAMb,MAAM,GAAGa,QAAQ,CAACP,IAAxB;MACAI,QAAQ,CAACX,kBAAkB,CAACC,MAAD,CAAnB,CAAR;IACD,CANH,EAOGc,KAPH,CAOUjB,KAAD,IAAW;MAChBa,QAAQ,CAACd,gBAAgB,CAACC,KAAK,CAACkB,OAAP,CAAjB,CAAR;IACD,CATH;EAUD,CAZD;AAaD,CAdM;AAgBP,OAAO,MAAMI,UAAU,GAAIhB,EAAD,IAAgB;EACxC,OAAQO,QAAD,IAAwB;IAC7BA,QAAQ,CAACR,aAAa,CAACC,EAAD,CAAd,CAAR;IACAlB,KAAK,CAACmC,IAAN,CAAY,uCAAsCjB,EAAG,EAArD;EACD,CAHD;AAID,CALM;AAOP,OAAO,MAAMkB,QAAQ,GAAI1B,OAAD,IAAiB;EACvC,OAAQe,QAAD,IAAwB;IAAA;;IAC7B,MAAMY,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc7B,OAAd,CAAZ;IAEA,MAAM8B,QAAQ,GAAG;MACfC,SAAS,EAAE,OAAOJ,GAAG,CAAC,EAAD,CAAV,KAAmB,QAAnB,GAA8BA,GAAG,CAAC,EAAD,CAAjC,GAAwCA,GAAG,CAAC,EAAD,CADvC;MAEfK,IAAI,WAAEL,GAAG,CAAC,CAAD,CAAL,0CAAE,MAAQK,IAFC;MAGfC,QAAQ,YAAEN,GAAG,CAAC,CAAD,CAAL,2CAAE,OAAQM,QAHH;MAIfC,OAAO,EAAE,OAAOP,GAAG,CAAC,EAAD,CAAV,KAAmB,QAAnB,GAA8BA,GAAG,CAAC,EAAD,CAAjC,GAAwCA,GAAG,CAAC,EAAD;IAJrC,CAAjB;IAOAZ,QAAQ,CAACL,WAAW,CAACV,OAAD,CAAZ,CAAR;IACAV,KAAK,CAAC;MACJ6C,MAAM,EAAE,MADJ;MAEJ5C,GAAG,EAAE,gCAFD;MAGJoB,IAAI,EAAEX;IAHF,CAAD,CAAL,CAIGiB,IAJH,CAKGC,QAAD,IAAc;MACZI,OAAO,CAACC,GAAR,CAAYL,QAAZ;IACD,CAPH,EAQGhB,KAAD,IAAW;MACToB,OAAO,CAACC,GAAR,CAAYrB,KAAZ;IACD,CAVH;EAYD,CAvBD;AAwBD,CAzBM"},"metadata":{},"sourceType":"module"}