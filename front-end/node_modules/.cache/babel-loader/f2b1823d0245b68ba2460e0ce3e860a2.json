{"ast":null,"code":"import axios from \"axios\";\nimport { url, apiKey } from \"../../utils/utils\";\nimport { ACTION_TYPES } from \"../actionTypes/actionTypes\";\n\nconst fetchPostsRequest = () => {\n  return {\n    type: ACTION_TYPES.FETCH_POSTS_REQUEST\n  };\n};\n\nconst fetchPostsSuccess = city => {\n  return {\n    type: ACTION_TYPES.FETCH_POSTS_SUCCESS,\n    payload: city\n  };\n};\n\nconst fetchPostsFailure = error => {\n  return {\n    type: ACTION_TYPES.FETCH_POSTS_FAILURE,\n    payload: error\n  };\n};\n\nconst deleteOneCity = id => {\n  return {\n    type: ACTION_TYPES.DELETE_ONE_CITY,\n    payload: id\n  };\n};\n\nconst saveOneCity = data => {\n  return {\n    type: ACTION_TYPES.SAVE_ONE_CITY,\n    payload: data\n  };\n};\n\nexport const fetchCity = str => {\n  return dispatch => {\n    dispatch(fetchPostsRequest());\n    axios.get(`${url}${str}${apiKey}`).then(response => {\n      const city = response.data;\n      dispatch(fetchPostsSuccess(city));\n    }).catch(error => {\n      dispatch(fetchPostsFailure(error.message));\n    });\n  };\n};\nexport const deleteCity = id => {\n  return dispatch => {\n    dispatch(deleteOneCity(id));\n    axios.post(`/saveCity/${id}`);\n  };\n};\nexport const saveCity = payload => {\n  return dispatch => {\n    axios({\n      method: \"post\",\n      url: \"/saveCity\",\n      data: {\n        firstName: \"Finn\",\n        lastName: \"Williams\"\n      }\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"names":["axios","url","apiKey","ACTION_TYPES","fetchPostsRequest","type","FETCH_POSTS_REQUEST","fetchPostsSuccess","city","FETCH_POSTS_SUCCESS","payload","fetchPostsFailure","error","FETCH_POSTS_FAILURE","deleteOneCity","id","DELETE_ONE_CITY","saveOneCity","data","SAVE_ONE_CITY","fetchCity","str","dispatch","get","then","response","catch","message","deleteCity","post","saveCity","method","firstName","lastName","console","log"],"sources":["C:/Users/wachu/Desktop/hypeChallenge/client/src/redux/actions/actions.ts"],"sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from \"axios\";\nimport { url, apiKey } from \"../../utils/utils\";\n\nimport { ACTION_TYPES } from \"../actionTypes/actionTypes\";\n\nconst fetchPostsRequest = () => {\n  return {\n    type: ACTION_TYPES.FETCH_POSTS_REQUEST,\n  };\n};\n\nconst fetchPostsSuccess = (city: any[]) => {\n  return {\n    type: ACTION_TYPES.FETCH_POSTS_SUCCESS,\n    payload: city,\n  };\n};\n\nconst fetchPostsFailure = (error: string) => {\n  return {\n    type: ACTION_TYPES.FETCH_POSTS_FAILURE,\n    payload: error,\n  };\n};\n\nconst deleteOneCity = (id: string) => {\n  return {\n    type: ACTION_TYPES.DELETE_ONE_CITY,\n    payload: id,\n  };\n};\n\nconst saveOneCity = (data: any[]) => {\n  return {\n    type: ACTION_TYPES.SAVE_ONE_CITY,\n    payload: data,\n  };\n};\n\nexport const fetchCity = (str: string) => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchPostsRequest());\n    axios\n      .get(`${url}${str}${apiKey}`)\n      .then((response) => {\n        const city = response.data;\n        dispatch(fetchPostsSuccess(city));\n      })\n      .catch((error) => {\n        dispatch(fetchPostsFailure(error.message));\n      });\n  };\n};\n\nexport const deleteCity = (id: string) => {\n  return (dispatch: Dispatch) => {\n    dispatch(deleteOneCity(id));\n    axios.post(`/saveCity/${id}`);\n  };\n};\n\nexport const saveCity = (payload: any[]) => {\n  return (dispatch: Dispatch) => {\n    axios({\n      method: \"post\",\n      url: \"/saveCity\",\n      data: {\n        firstName: \"Finn\",\n        lastName: \"Williams\",\n      },\n    }).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n};\n"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AAEA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;EAC9B,OAAO;IACLC,IAAI,EAAEF,YAAY,CAACG;EADd,CAAP;AAGD,CAJD;;AAMA,MAAMC,iBAAiB,GAAIC,IAAD,IAAiB;EACzC,OAAO;IACLH,IAAI,EAAEF,YAAY,CAACM,mBADd;IAELC,OAAO,EAAEF;EAFJ,CAAP;AAID,CALD;;AAOA,MAAMG,iBAAiB,GAAIC,KAAD,IAAmB;EAC3C,OAAO;IACLP,IAAI,EAAEF,YAAY,CAACU,mBADd;IAELH,OAAO,EAAEE;EAFJ,CAAP;AAID,CALD;;AAOA,MAAME,aAAa,GAAIC,EAAD,IAAgB;EACpC,OAAO;IACLV,IAAI,EAAEF,YAAY,CAACa,eADd;IAELN,OAAO,EAAEK;EAFJ,CAAP;AAID,CALD;;AAOA,MAAME,WAAW,GAAIC,IAAD,IAAiB;EACnC,OAAO;IACLb,IAAI,EAAEF,YAAY,CAACgB,aADd;IAELT,OAAO,EAAEQ;EAFJ,CAAP;AAID,CALD;;AAOA,OAAO,MAAME,SAAS,GAAIC,GAAD,IAAiB;EACxC,OAAQC,QAAD,IAAwB;IAC7BA,QAAQ,CAAClB,iBAAiB,EAAlB,CAAR;IACAJ,KAAK,CACFuB,GADH,CACQ,GAAEtB,GAAI,GAAEoB,GAAI,GAAEnB,MAAO,EAD7B,EAEGsB,IAFH,CAESC,QAAD,IAAc;MAClB,MAAMjB,IAAI,GAAGiB,QAAQ,CAACP,IAAtB;MACAI,QAAQ,CAACf,iBAAiB,CAACC,IAAD,CAAlB,CAAR;IACD,CALH,EAMGkB,KANH,CAMUd,KAAD,IAAW;MAChBU,QAAQ,CAACX,iBAAiB,CAACC,KAAK,CAACe,OAAP,CAAlB,CAAR;IACD,CARH;EASD,CAXD;AAYD,CAbM;AAeP,OAAO,MAAMC,UAAU,GAAIb,EAAD,IAAgB;EACxC,OAAQO,QAAD,IAAwB;IAC7BA,QAAQ,CAACR,aAAa,CAACC,EAAD,CAAd,CAAR;IACAf,KAAK,CAAC6B,IAAN,CAAY,aAAYd,EAAG,EAA3B;EACD,CAHD;AAID,CALM;AAOP,OAAO,MAAMe,QAAQ,GAAIpB,OAAD,IAAoB;EAC1C,OAAQY,QAAD,IAAwB;IAC7BtB,KAAK,CAAC;MACJ+B,MAAM,EAAE,MADJ;MAEJ9B,GAAG,EAAE,WAFD;MAGJiB,IAAI,EAAE;QACJc,SAAS,EAAE,MADP;QAEJC,QAAQ,EAAE;MAFN;IAHF,CAAD,CAAL,CAOGT,IAPH,CAQGC,QAAD,IAAc;MACZS,OAAO,CAACC,GAAR,CAAYV,QAAZ;IACD,CAVH,EAWGb,KAAD,IAAW;MACTsB,OAAO,CAACC,GAAR,CAAYvB,KAAZ;IACD,CAbH;EAeD,CAhBD;AAiBD,CAlBM"},"metadata":{},"sourceType":"module"}